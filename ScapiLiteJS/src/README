##################
emscripten 1.37.22
##################
mkdir emscripten
sudo apt-get install debootstrap
sudo debootstrap --arch i386 stretch emscripten
sudo chroot emscripten /bin/bash
apt-get install python cmake g++ nodejs git lzip
echo "none /dev/shm tmpfs rw,nosuid,nodev,noexec 0 0" >> /etc/fstab
mount /dev/shm
adduser emscripten
su - emscripten
wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz
tar xf emsdk-portable.tar.gz
cd emsdk-portable
./emsdk update
./emsdk install latest-32bit
./emsdk activate latest-32bit
source ./emsdk_env.sh
mkdir -p ${HOME}/opt/src
cd ${HOME}/opt/src

##################
gmp 6.1.2
##################
wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.lz
tar xf gmp-6.1.2.tar.lz
cd gmp-6.1.2
CC_FOR_BUILD=/usr/bin/gcc ABI=standard emconfigure ./configure \
  --build i686-pc-linux-gnu --host none --disable-assembly --enable-cxx \
  --prefix=${HOME}/opt
make -j 6
make install
cd ..

##################
mpfr 4.0.1
##################
wget http://www.mpfr.org/mpfr-current/mpfr-4.0.1.tar.xz
tar xf mpfr-4.0.1.tar.xz
cd mpfr-4.0.1
emconfigure ./configure --build i686-pc-linux-gnu --host none \
  --prefix=${HOME}/opt --with-gmp=${HOME}/opt
make -j 6
make install
cd ..
mpc 1.1.0
wget http://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz
tar xf mpc-1.1.0.tar.gz
cd mpc-1.1.0
emconfigure ./configure --build i686-pc-linux-gnu --host none \
  --prefix=${HOME}/opt --with-gmp=${HOME}/opt --with-mpfr=${HOME}/opt
make -j 6
make install
cd ..

##################
ntl 10.5.0
##################
wget http://www.shoup.net/ntl/ntl-10.5.0.tar.gz
tar xf ntl-10.5.0.tar.gz
cd ntl-10.5.0

* Option 1: without GMP
emconfigure ./configure DEF_PREFIX=${HOME}/opt NTL_GMP_LIP=off
Edit makefile:
  CXX=em++
  WIZARD=off
  within setup 1-3 sections: use g++ instead of em++
make -j 6
make install

* OPTIONAL: run test to check NTL library was installed correctly:
  emcc tests_ntl.cpp ~/opt/lib/libntl.a -o tests_ntl.js -I${HOME}/opt/include

* Option 2: with GMP (optimal - choose this one)
Compile GMP with gcc:
  cd $HOME/opt/src/gmp-6.1.2
  make clean
  ./configure --prefix=$HOME/optnojs --disable-assembly --build=none --host=none
  Edit config.h:
    comment out: #define HAVE_OBSTACK_VPRINTF 1
    comment out: #define HAVE_QUAD_T 1
  make
  make install
emconfigure ./configure DEF_PREFIX=${HOME}/opt NTL_GMP_LIP=on
Edit makefile:
  CXX=em++
  WIZARD=off
  GMP_PREFIX=$HOME/optnojs
  setup 1-4: use g++ instead of em++
make -j 6
make install

* OPTIONAL: run the following test to check NTL library was installed correctly:
  emcc tests_ntl.cpp ~/opt/lib/libntl.a ~/opt/lib/libgmp.a -o tests_ntl.js -I${HOME}/opt/include

#################################
Preperations - NodeJS installaion
#################################
* open a new tab *
sudo chroot emscripten /bin/bash
curl -sL https://deb.nodesource.com/setup_9.x | bash -
sudo apt-get install -y nodejs
Edit '/usr/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js':
  set maxConcurrentWorkers to 1
apt get install npm
npm install ws@2.3.1
* IMPORTANT: 
  1. don't run 'su - emscripten' for this stage - remain as root
  2. you must install ws version 2.3.1 or below (from version 3.0.0 till 5.1.0 [the last version according to this moment], there is a bug which cause the nodejs server to crash. It can be fixed by manipulating the generated javascript: see https://github.com/kripken/emscripten/issues/5971, but it is much easier to install earlier version as I mentioned)

################################
Running stage
################################
Open 3 new tabs and in each of them run:
sudo chroot emscripten /bin/bash
su - emscripten
cd emsdk-portable
source ./emsdk_env.sh
cd ~/opt/src
alias ll='ls -l'

Clone ScapiLite project and go into 'ScapiLiteJS/src' folder.

Each tab represents a participate and you MUST run the participates in descending order (from the third one to the first) and to wait ~5 seconds between each run.
Means:

Run participate 3:
nodejs protocol.js -partyID 2 -partiesNumber 3 -inputFile assets/inputs333.txt -outputFile output.txt -circuitFile assets/1000000G_1000000MG_333In_50Out_20D_OutputOne3P.txt -partiesFile assets/parties.conf -fieldType GF2_8LookupTable -internalIterationsNumber 1

* Wait ~5 seconds

Run participate 2:
nodejs protocol.js -partyID 1 -partiesNumber 3 -inputFile assets/inputs333.txt -outputFile output.txt -circuitFile assets/1000000G_1000000MG_333In_50Out_20D_OutputOne3P.txt -partiesFile assets/parties.conf -fieldType GF2_8LookupTable -internalIterationsNumber 1

* Wait ~5 seconds

Run participate 1:
nodejs protocol.js -partyID 0 -partiesNumber 3 -inputFile assets/inputs333.txt -outputFile output.txt -circuitFile assets/1000000G_1000000MG_333In_50Out_20D_OutputOne3P.txt -partiesFile assets/parties.conf -fieldType GF2_8LookupTable -internalIterationsNumber 1
